# Staging Environment Configuration for Books API Proxy
# Safe testing environment before production deployment

name = "books-api-proxy-staging"
main = "simple-staging-worker.js"
compatibility_date = "2024-12-01"
compatibility_flags = ["nodejs_compat"]

# Staging Environment Variables
[vars]
ENVIRONMENT = "staging"
VERSION = "3.0-optimized-staging"
LOG_LEVEL = "debug"
FEATURE_FLAGS = "intelligent-caching,quota-optimization,cultural-indexing,performance-optimization"
CACHE_DEBUG = "true"

# Rate limiting configuration (more permissive for testing)
RATE_LIMIT_DEFAULT = "500"
RATE_LIMIT_AUTHENTICATED = "2000"
RATE_LIMIT_BATCH_MAX = "25"

# Performance configuration
COMPRESSION_ENABLED = "true"
COMPRESSION_THRESHOLD = "1024"
EDGE_CACHE_TTL = "300"
BROWSER_CACHE_TTL = "60"

# Cultural indexing configuration
CULTURAL_INDEXING_ENABLED = "true"
AUTHOR_PROFILE_CONFIDENCE_THRESHOLD = "30"
CULTURAL_DATA_TTL = "604800"

# Analytics configuration
ANALYTICS_ENABLED = "true"
PERFORMANCE_MONITORING_ENABLED = "true"

# Security configuration  
SECURITY_HEADERS_ENABLED = "true"
CORS_ORIGIN = "*"
REQUEST_SIZE_LIMIT = "1048576"

# KV Namespaces for caching and data storage
[[kv_namespaces]]
binding = "BOOKS_CACHE"
id = "8e05b3b27f404b7789cd9a00d19208bc"

[[kv_namespaces]]
binding = "AUTHOR_PROFILES"
id = "c7da0b776d6247589949d19c0faf03ae"

# R2 Buckets for cold storage
[[r2_buckets]]
binding = "BOOKS_R2"
bucket_name = "books-cache-staging"

[[r2_buckets]]
binding = "CULTURAL_DATA_R2"
bucket_name = "cultural-data-staging"

# Observability
[observability]
enabled = true

# Cron triggers for maintenance tasks
[triggers]
crons = ["0 3 * * *"]   # Daily at 3 AM UTC for staging maintenance